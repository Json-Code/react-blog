{"version":3,"sources":["utils/loadable.js","api/index.js","Router/index.js","requireLogin.js","pages/admin/login/index.js","App.js","serviceWorker.js","index.js"],"names":["loadingComponent","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","antd_es_spin__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","loader","loading","arguments","length","undefined","Loadable","axios","defaults","timeout","baseURL","interceptors","request","use","config","headers","error","antd_es_message__WEBPACK_IMPORTED_MODULE_1__","Promise","reject","response","res","get","url","params","resolve","then","data","post","download","target","fileName","downloadEl","document","href","body","appendChild","click","removeChild","window","open","routes","path","component","loadable","all","__webpack_require__","e","bind","requireLogin","Component","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login","inherits","createClass","key","value","checkAuth","nextProps","sessionStorage","getItem","pathname","location","setState","history","push","_react_16_13_0_react_default","handleSubmit","preventDefault","form","validateFields","_ref","asyncToGenerator","regenerator_default","mark","_callee","err","values","_ref2","code","desc","wrap","_context","prev","next","api","sent","message","success","setItem","name","stop","_x","_x2","apply","getFieldDecorator","Particles_default","id","height","card","style","width","borderRadius","es_form","onSubmit","Item","rules","required","input","prefix","icon","type","color","placeholder","es_button","htmlType","block","React","Login","create","App","HashRouter","Route","exact","render","Redirect","to","map","route","i","includes","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b06be003.chunk.js","sourcesContent":["import React from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport { Spin } from 'antd';\r\nimport './loadable.less'\r\n\r\n\r\n//通用的过场组件\r\nconst loadingComponent =()=>{\r\n  return (\r\n    <div className=\"loading-contain\"><Spin /></div>\r\n  ) \r\n}\r\n\r\n//过场组件默认采用通用的，若传入了loading，则采用传入的过场组件\r\nexport default (loader, loading = loadingComponent) => {\r\n  return Loadable({\r\n    loader,\r\n    loading\r\n  })\r\n}\r\n","import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\naxios.defaults.timeout = 5000\r\naxios.defaults.baseURL = '/api'\r\n\r\n\r\n//http request 拦截器\r\naxios.interceptors.request.use(\r\n  config => {\r\n    config.headers = {\r\n      // 'Content-Type':'application/x-www-form-urlencoded'\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    message.error('请求出错了， 请稍后重试')\r\n    return Promise.reject(error)\r\n  }\r\n);\r\n\r\n\r\n//http response 拦截器\r\naxios.interceptors.response.use(\r\n  res => {\r\n    // const data = res.data\r\n    // if (data.code !== 1000) {\r\n    //   message.error(data.desc)\r\n    //   return Promise.reject(data)\r\n    // }\r\n    return res\r\n  },\r\n  error => {\r\n    message.error('请求出错了， 请稍后重试')\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n export default {\r\n    get(url, params = {}) {\r\n      return new Promise((resolve,reject) => {\r\n        axios.get(url, {\r\n          params\r\n        })\r\n        .then(res => {\r\n          resolve(res.data);\r\n        })\r\n      })\r\n    },\r\n    post(url, data = {}){\r\n      return new Promise((resolve,reject) => {\r\n        axios.post(url,data)\r\n          .then(res => {\r\n            resolve(res.data)\r\n          })\r\n      })\r\n    },\r\n    download (url, target = false, fileName = '')  {\r\n      try {\r\n        const downloadEl = document.createElement('a')\r\n        downloadEl.href = url\r\n        if (target) downloadEl.target = '_blank'\r\n        if (fileName) downloadEl.download = fileName\r\n        document.body.appendChild(downloadEl)\r\n        downloadEl.click()\r\n        document.body.removeChild(downloadEl)\r\n      } catch (error) {\r\n        window.open(url)\r\n      }\r\n    }\r\n }","import loadable from '../utils/loadable'\r\n\r\nconst adminLayout = loadable(()=>import('../pages/admin/layout'))\r\nconst webLayout = loadable(()=>import('../pages/web/layout'))\r\n\r\nconst routes = [\r\n  {\r\n    path: '/admin',\r\n    component: adminLayout\r\n  },\r\n  {\r\n    path: '/web',\r\n    component: webLayout\r\n  }\r\n]\r\n\r\nexport default routes","import React from 'react'\r\n \r\nexport  default function requireLogin(Component) {\r\n  // 组件有已登陆的模块 直接返回 (防止从新渲染)\r\n  if (Component.requireLogin) {\r\n  return Component.requireLogin\r\n  }\r\n\r\n  // 创建验证组件\r\n  class requireLogin extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        login: true\r\n      }\r\n    }\r\n\r\n    componentWillMount() {\r\n      this.checkAuth();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n      this.checkAuth();\r\n    }\r\n\r\n    checkAuth() {\r\n      // 判断登陆\r\n      const login = sessionStorage.getItem('blogUser')\r\n      // 未登陆重定向到登陆页面\r\n      const pathname = this.props.location.pathname !== '/login'\r\n\r\n      if (!login && pathname) {\r\n        this.props.history.push('/login')\r\n        return\r\n      }\r\n      this.setState({login})\r\n    }\r\n\r\n    render() {\r\n      if (this.state.login) {\r\n      return <Component {...this.props}/>\r\n      }\r\n      return ''\r\n    }\r\n  }\r\n  Component.requireLogin = requireLogin\r\n  return Component.requireLogin\r\n\r\n}","import React from 'react'\r\nimport { Form, Icon, Input, Button, Card, message  } from 'antd';\r\nimport Particles from 'reactparticles.js'\r\nimport './index.less'\r\nimport api from '../../../api'\r\n\r\nclass login extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      loading: false\r\n    }\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        const {code, desc, data} = await api.post('/loginIn', values)\r\n        if (code === 1000) {\r\n          message.success(desc)\r\n          sessionStorage.setItem('blogUser', data.name)\r\n          sessionStorage.setItem('menuItmeKey', '0')\r\n          this.props.history.push('/admin/page')\r\n        } else {\r\n          message.error(desc)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className='login'>\r\n        <Particles id=\"particles1\" config=\"particles1.json\" height='90%' />\r\n        <Card className=\"login-form\" style={{width: 300,borderRadius: 4}}>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Item>\r\n              {getFieldDecorator('userName', {\r\n                rules: [{ required: true, message: '请输入用户名' }],\r\n              })(\r\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入用户名\" />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '请输入密码' }],\r\n              })(\r\n                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"请输入密码\" />\r\n              )}\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>Log in</Button>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Login = Form.create({ name: 'normal_login' })(login)\r\n\r\nexport default Login","// import api from './api'\r\nimport React, { Component } from 'react'\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\nimport routes from './Router'\r\nimport requireLogin from './requireLogin'\r\nimport Login from './pages/admin/login'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/web/index\" push />} />\r\n        <Route path='/login' component={Login} />\r\n        {routes.map((route, i) => (\r\n          <Route\r\n          key={i}\r\n          path={route.path}\r\n          component={\r\n            route.path.includes('/admin')\r\n            ? requireLogin(route.component)\r\n            : route.component\r\n          }\r\n         />\r\n        ))}\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.less';\r\nimport './assets/root.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import Router from './Router/router'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}